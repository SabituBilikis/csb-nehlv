{"version":3,"sources":["Components/App.jsx","index.js"],"names":["App","React","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","id","onSubmit","e","preventDefault","newTodo","Date","getTime","text","completed","concat","type","onChange","target","value","map","className","checked","updatedTodos","toggleComplete","onClick","submitEdits","filter","deleteTodo","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4LA4FeA,EA1FH,WACV,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBH,IAAMC,SAAS,IAAvC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCL,IAAMC,SAAS,MAArD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCP,IAAMC,SAAS,IAArD,mBAAOO,EAAP,KAAoBC,EAApB,KA0CA,OACE,sBAAKC,GAAG,YAAR,UACE,2CACA,uBAAMC,SAzCV,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdJ,IAAI,IAAIK,MAAOC,UACfC,KAAMb,EACNc,WAAW,GAEbf,EAAS,YAAID,GAAOiB,OAAOL,IAC3BT,EAAQ,KAgCN,UACE,uBACEe,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOP,EAAQO,EAAEU,OAAOC,QAClCA,MAAOnB,IAET,wBAAQgB,KAAK,SAAb,yBAEDlB,EAAMsB,KAAI,SAACpB,GAAD,OACT,sBAAmBqB,UAAU,OAA7B,UACE,sBAAKA,UAAU,YAAf,UACE,uBACEL,KAAK,WACLV,GAAG,YACHgB,QAAStB,EAAKc,UACdG,SAAU,kBAvCtB,SAAwBX,GACtB,IAAIiB,EAAe,YAAIzB,GAAOsB,KAAI,SAACpB,GAIjC,OAHIA,EAAKM,KAAOA,IACdN,EAAKc,WAAad,EAAKc,WAElBd,KAETD,EAASwB,GAgCiBC,CAAexB,EAAKM,OAErCN,EAAKM,KAAOJ,EACX,uBACEc,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOH,EAAeG,EAAEU,OAAOC,UAG3C,8BAAMnB,EAAKa,UAGf,sBAAKQ,UAAU,eAAf,UACGrB,EAAKM,KAAOJ,EACX,wBAAQuB,QAAS,kBA1C7B,SAAqBnB,GACnB,IAAMiB,EAAe,YAAIzB,GAAOsB,KAAI,SAACpB,GAInC,OAHIA,EAAKM,KAAOA,IACdN,EAAKa,KAAOT,GAEPJ,KAETD,EAASwB,GACTpB,EAAe,MAkCkBuB,CAAY1B,EAAKM,KAAxC,0BAEA,wBAAQmB,QAAS,kBAAMtB,EAAeH,EAAKM,KAA3C,kBAGF,wBAAQmB,QAAS,kBA9D3B,SAAoBnB,GAClB,IAAIiB,EAAe,YAAIzB,GAAO6B,QAAO,SAAC3B,GAAD,OAAUA,EAAKM,KAAOA,KAC3DP,EAASwB,GA4DsBK,CAAW5B,EAAKM,KAAvC,yBAxBMN,EAAKM,WCvDjBuB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.7284d8d9.chunk.js","sourcesContent":["import React from 'react'\nimport \"../styles/styles.css\";\nconst App = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [todo, setTodo] = React.useState(\"\");\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n  \n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    setTodos([...todos].concat(newTodo));\n    setTodo(\"\");\n  }\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function submitEdits(id) {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setTodoEditing(null);\n  }\n\n  return (\n    <div id=\"todo-list\">\n      <h1>Todo List</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          onChange={(e) => setTodo(e.target.value)}\n          value={todo}\n        />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n      {todos.map((todo) => (\n        <div key={todo.id} className=\"todo\">\n          <div className=\"todo-text\">\n            <input\n              type=\"checkbox\"\n              id=\"completed\"\n              checked={todo.completed}\n              onChange={() => toggleComplete(todo.id)}\n            />\n            {todo.id === todoEditing ? (\n              <input\n                type=\"text\"\n                onChange={(e) => setEditingText(e.target.value)}\n              />\n            ) : (\n              <div>{todo.text}</div>\n            )}\n          </div>\n          <div className=\"todo-actions\">\n            {todo.id === todoEditing ? (\n              <button onClick={() => submitEdits(todo.id)}>Submit Edits</button>\n            ) : (\n              <button onClick={() => setTodoEditing(todo.id)}>Edit</button>\n            )}\n\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./Components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}